# Generated by Django 2.2.3 on 2019-08-02 07:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AvailabilityTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.DecimalField(decimal_places=0, default=0, max_digits=1, null=True)),
            ],
            options={
                'ordering': ('matchID', 'status', 'player'),
            },
        ),
        migrations.CreateModel(
            name='MatchData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_match', models.DateField()),
                ('time_of_match', models.TimeField()),
                ('venue', models.TextField(max_length='100')),
                ('match_notes', models.TextField(blank=True, max_length='200', null=True)),
                ('selected_team', models.CharField(blank=True, max_length=10000, null=True)),
                ('reminder_emails', models.DecimalField(decimal_places=0, default=0, max_digits=1, null=True)),
                ('match_status', models.CharField(choices=[('S', 'Scheduled'), ('C', 'Cancelled')], default='S', max_length=1)),
            ],
            options={
                'ordering': ('-date_of_match', 'time_of_match'),
            },
        ),
        migrations.CreateModel(
            name='PerformanceRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance_rating', models.DecimalField(decimal_places=0, default=0, max_digits=1)),
                ('performance_matchID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_match_id', to='matches.MatchData')),
            ],
            options={
                'ordering': ('performance_matchID',),
            },
        ),
    ]
